{"version":3,"file":"chunks/gui.js","sources":["webpack://GUI/./src/playground/index.css","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/sources/facepanel.txt","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/sources/template.html","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face-next.js","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/config.js","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/editor/canvas.js","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/editor/index.js","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/editor/ring.js","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/index.js","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/sources/iconfont.js","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/sources/index.js","webpack://GUI/./src/lib/scratch-extends/scratch-blocks/field-face/util.js","webpack://GUI/./src/playground/index.css?5c54","webpack://GUI/./src/playground/index.jsx","webpack://GUI/./src/playground/render-gui.jsx","webpack://GUI/./locale-data/complete.js (ignored)"],"sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"html,\\nbody,\\n.index_app_2mqDO {\\n    /* probably unecessary, transitional until layout is refactored */\\n    width: 100%; \\n    height: 100%;\\n    margin: 0;\\n\\n    /* Setting min height/width makes the UI scroll below those sizes */\\n    min-width: 1024px;\\n    min-height: 640px; /* Min height to fit sprite/backdrop button */\\n}\\n\\n/* @todo: move globally? Safe / side FX, for blocks particularly? */\\n\\n* { -webkit-box-sizing: border-box; box-sizing: border-box; }\\n\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"app\": \"index_app_2mqDO\"\n};","module.exports = \".fp-icon {\\r\\n  vertical-align: -0.15em;\\r\\n  fill: currentColor;\\r\\n  overflow: hidden;\\r\\n  width: 1.5rem;\\r\\n  height: 1.5rem;\\r\\n}\\r\\n.facepanel {\\r\\n  visibility: hidden;\\r\\n}\\r\\n.facepanel .fp-modal-mask,\\r\\n.facepanel .fp-modal {\\r\\n  -webkit-animation-duration: 0.2s;\\r\\n          animation-duration: 0.2s;\\r\\n  -webkit-animation-fill-mode: backwards;\\r\\n          animation-fill-mode: backwards;\\r\\n  will-change: animation;\\r\\n}\\r\\n.facepanel .fp-modal-mask {\\r\\n  -webkit-animation-timing-function: linear;\\r\\n          animation-timing-function: linear;\\r\\n}\\r\\n.facepanel .fp-modal {\\r\\n  -webkit-animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\\r\\n          animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\\r\\n}\\r\\n.facepanel.facepanel-show {\\r\\n  -webkit-animation-name: fadeIn;\\r\\n          animation-name: fadeIn;\\r\\n}\\r\\n.facepanel.facepanel-show .fp-modal-mask {\\r\\n  -webkit-animation-name: fadeIn;\\r\\n          animation-name: fadeIn;\\r\\n}\\r\\n.facepanel.facepanel-show .fp-modal {\\r\\n  -webkit-animation-name: slideInUp;\\r\\n          animation-name: slideInUp;\\r\\n}\\r\\n.facepanel.facepanel-hide .fp-modal-mask {\\r\\n  -webkit-animation-name: fadeOut;\\r\\n          animation-name: fadeOut;\\r\\n}\\r\\n.facepanel.facepanel-hide .fp-modal {\\r\\n  -webkit-animation-name: slideOutDown;\\r\\n          animation-name: slideOutDown;\\r\\n}\\r\\n.facepanel.facepanel-hide .fp-svg rect,\\r\\n.facepanel.facepanel-hide .fp-svg circle {\\r\\n  transition: none;\\r\\n  will-change: transition;\\r\\n}\\r\\n@-webkit-keyframes fadeIn {\\r\\n  from {\\r\\n    opacity: 0;\\r\\n  }\\r\\n  to {\\r\\n    opacity: 1;\\r\\n  }\\r\\n}\\r\\n@keyframes fadeIn {\\r\\n  from {\\r\\n    opacity: 0;\\r\\n  }\\r\\n  to {\\r\\n    opacity: 1;\\r\\n  }\\r\\n}\\r\\n@-webkit-keyframes fadeOut {\\r\\n  from {\\r\\n    opacity: 1;\\r\\n  }\\r\\n  to {\\r\\n    opacity: 0;\\r\\n  }\\r\\n}\\r\\n@keyframes fadeOut {\\r\\n  from {\\r\\n    opacity: 1;\\r\\n  }\\r\\n  to {\\r\\n    opacity: 0;\\r\\n  }\\r\\n}\\r\\n@-webkit-keyframes slideInUp {\\r\\n  from {\\r\\n    -webkit-transform: translate(-50%, -20%);\\r\\n            transform: translate(-50%, -20%);\\r\\n  }\\r\\n  to {\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n  }\\r\\n}\\r\\n@keyframes slideInUp {\\r\\n  from {\\r\\n    -webkit-transform: translate(-50%, -20%);\\r\\n            transform: translate(-50%, -20%);\\r\\n  }\\r\\n  to {\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n  }\\r\\n}\\r\\n@-webkit-keyframes slideOutDown {\\r\\n  from {\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n  }\\r\\n  to {\\r\\n    opacity: 0;\\r\\n    -webkit-transform: translate(-50%, -20%);\\r\\n            transform: translate(-50%, -20%);\\r\\n  }\\r\\n}\\r\\n@keyframes slideOutDown {\\r\\n  from {\\r\\n    -webkit-transform: translate(-50%, -50%);\\r\\n            transform: translate(-50%, -50%);\\r\\n  }\\r\\n  to {\\r\\n    opacity: 0;\\r\\n    -webkit-transform: translate(-50%, -20%);\\r\\n            transform: translate(-50%, -20%);\\r\\n  }\\r\\n}\\r\\n.fp-modal-mask {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  z-index: 1000;\\r\\n  background-color: rgba(0, 0, 0, 0.5);\\r\\n}\\r\\n.fp-modal {\\r\\n  z-index: 1001;\\r\\n  background-color: #fff;\\r\\n  border-radius: 0.75rem;\\r\\n  box-shadow: 0 0 0.25rem rgba(27, 27, 27, 0.144);\\r\\n  -webkit-backface-visibility: hidden;\\r\\n          backface-visibility: hidden;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n.fp-modal:not(.preivew) {\\r\\n  position: fixed;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate3d(-50%, -50%, 0);\\r\\n          transform: translate3d(-50%, -50%, 0);\\r\\n}\\r\\n.fp-modal-content .facepanel-editor-row {\\r\\n  white-space: nowrap;\\r\\n  width: auto;\\r\\n}\\r\\n.fp-modal-content .facepanel-editor-cell {\\r\\n  z-index: 2;\\r\\n  display: inline-block;\\r\\n  vertical-align: top;\\r\\n  box-sizing: content-box;\\r\\n  cursor: pointer;\\r\\n}\\r\\n.fp-modal-content .point-target {\\r\\n  position: absolute;\\r\\n  background-color: rgba(0, 0, 0, 0.125);\\r\\n  pointer-events: none;\\r\\n  z-index: 0;\\r\\n  transition: -webkit-transform 0.1s ease-in;\\r\\n  transition: transform 0.1s ease-in;\\r\\n  transition: transform 0.1s ease-in, -webkit-transform 0.1s ease-in;\\r\\n  will-change: transform;\\r\\n  visibility: hidden;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n.fp-modal-content .point-target.point-target-x {\\r\\n  top: 0;\\r\\n  height: 100%;\\r\\n}\\r\\n.fp-modal-content .point-target.point-target-y {\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n}\\r\\n.fp-modal-footer {\\r\\n  border-top: 1px solid #e0e5eb;\\r\\n  padding: 1rem 1.5rem;\\r\\n  text-align: right;\\r\\n}\\r\\n.fp-modal-footer .fp-btn-action {\\r\\n  font-size: 0.75rem;\\r\\n  height: 2rem;\\r\\n  margin-left: 1rem;\\r\\n  width: 6rem;\\r\\n  padding: 0;\\r\\n}\\r\\n.fp-linear-actions {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  z-index: 1;\\r\\n}\\r\\n.fp-color-list-container {\\r\\n  min-height: 9px;\\r\\n}\\r\\n.fp-color-list {\\r\\n  flex-wrap: nowrap;\\r\\n  padding: 1rem 2.5rem 0.5rem 2.5rem;\\r\\n  border-bottom: 1px solid #e0e5eb;\\r\\n}\\r\\n.fp-color-list .fp-icon {\\r\\n  opacity: 0;\\r\\n  transition: opacity 0.2s linear;\\r\\n  will-change: transition;\\r\\n}\\r\\n.fp-color-list .color-item-selected .fp-icon {\\r\\n  opacity: 1;\\r\\n}\\r\\n.color-list {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  align-items: center;\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n}\\r\\n.color-list .color-list-item {\\r\\n  margin-right: 1rem;\\r\\n  margin-bottom: 0.5rem;\\r\\n  position: relative;\\r\\n}\\r\\n.color-list .color-item {\\r\\n  cursor: pointer;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  width: 1.5rem;\\r\\n  height: 1.5rem;\\r\\n  line-height: 1.5rem;\\r\\n  border-radius: 0.75rem;\\r\\n  color: #c8c8c8;\\r\\n  transition: color 0.25s linear, box-shadow 0.25s linear;\\r\\n  will-change: color, box-shadow;\\r\\n  z-index: 1;\\r\\n  border: 1px solid currentColor;\\r\\n  padding: 3px;\\r\\n}\\r\\n.color-list .color-item .anticon {\\r\\n  color: #fa0000;\\r\\n}\\r\\n.color-list button {\\r\\n  display: block;\\r\\n}\\r\\n.face-list {\\r\\n  display: flex;\\r\\n  overflow-x: auto;\\r\\n  flex-wrap: wrap;\\r\\n  padding: 0.25rem 0 0 0.25rem;\\r\\n  border: 1px solid #eee;\\r\\n  border-radius: 0.25rem;\\r\\n}\\r\\n.face-list .face-item {\\r\\n  position: relative;\\r\\n  margin-right: 0.25rem;\\r\\n  margin-bottom: 0.25rem;\\r\\n  cursor: pointer;\\r\\n  background-color: #eee;\\r\\n  margin-left: 3px;\\r\\n  margin-right: 3px;\\r\\n  border-radius: 2px;\\r\\n}\\r\\n.face-list .face-item svg {\\r\\n  display: block;\\r\\n  max-width: 72px;\\r\\n  max-height: 36px;\\r\\n}\\r\\n.face-list .remove-target {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n  z-index: 1;\\r\\n}\\r\\n.linear-action {\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  text-align: center;\\r\\n  font-size: 12px;\\r\\n  padding: 0.5rem;\\r\\n}\\r\\n.linear-action svg.action-icon {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n.fp-editor {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  padding: 1.5rem 1.25rem 1rem 2rem;\\r\\n}\\r\\n.fp-editor-container {\\r\\n  margin-right: 0.5rem;\\r\\n  flex: 1;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  display: flex;\\r\\n  min-width: 30rem;\\r\\n}\\r\\n.fp-editor-content,\\r\\n.fp-canvas-content {\\r\\n  position: relative;\\r\\n}\\r\\n.fp-canvas-content:hover .point-target {\\r\\n  visibility: visible;\\r\\n}\\r\\n.fp-canvas-content .fp-svg-canvas {\\r\\n  position: relative;\\r\\n  z-index: 1;\\r\\n  background-repeat: no-repeat;\\r\\n  background-position: center;\\r\\n  background-size: contain;\\r\\n}\\r\\n.fp-svg {\\r\\n  display: block;\\r\\n  cursor: pointer;\\r\\n}\\r\\n.fp-svg rect,\\r\\n.fp-svg circle {\\r\\n  transition: fill 0.1s ease-in-out, stroke 0.1s ease-in-out;\\r\\n  will-change: transition;\\r\\n}\\r\\n.fp-axis {\\r\\n  z-index: 1;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n.fp-axis.fp-axis-hide {\\r\\n  visibility: hidden;\\r\\n}\\r\\n.fp-axis .axis-point {\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  text-align: center;\\r\\n  pointer-events: none;\\r\\n  -webkit-user-select: none;\\r\\n     -moz-user-select: none;\\r\\n      -ms-user-select: none;\\r\\n          user-select: none;\\r\\n  font-size: 12px;\\r\\n  -webkit-transform: none;\\r\\n          transform: none;\\r\\n  transition: none;\\r\\n  color: #405471;\\r\\n  transition: color 0.1s ease-in-out;\\r\\n  will-change: transition;\\r\\n}\\r\\n.fp-actions {\\r\\n  padding: 1rem 0.875rem;\\r\\n  border-radius: 0.5rem;\\r\\n}\\r\\n.fp-actions .action-item {\\r\\n  display: block;\\r\\n  line-height: 1;\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  margin-bottom: 1rem;\\r\\n}\\r\\n.fp-actions .action-item:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n.fp-actions .action-item .fp-btn-action {\\r\\n  position: relative;\\r\\n  width: 2.5rem;\\r\\n  height: 2.5rem;\\r\\n  padding: 0.5rem;\\r\\n  border-radius: 2rem;\\r\\n}\\r\\n.fp-actions .action-item .action-radio {\\r\\n  visibility: hidden;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n}\\r\\n.fp-actions .action-item .action-radio:checked ~ label {\\r\\n  background-color: #1EAAFF;\\r\\n}\\r\\n.fp-actions .action-item .action-radio:checked ~ label .fp-icon {\\r\\n  color: #fff;\\r\\n}\\r\\n.fp-preset-container {\\r\\n  display: block;\\r\\n  width: 100%;\\r\\n  height: 5.5rem;\\r\\n  overflow: hidden;\\r\\n  position: relative;\\r\\n  border-top: 1px solid #e0e5eb;\\r\\n  padding: 1rem 0;\\r\\n}\\r\\n.fp-preset-container .fp-slides-content {\\r\\n  position: absolute;\\r\\n  top: 1rem;\\r\\n  bottom: 0;\\r\\n  left: 2.25rem;\\r\\n  right: 8.25rem;\\r\\n  padding: 0.25rem 0;\\r\\n  overflow-x: auto;\\r\\n  overflow-y: hidden;\\r\\n}\\r\\n.fp-preset-container .fp-preset-item {\\r\\n  position: relative;\\r\\n  cursor: pointer;\\r\\n  background-color: #E0E5EB;\\r\\n  margin-left: 0.25rem;\\r\\n  margin-right: 0.25rem;\\r\\n  border-radius: 2px;\\r\\n}\\r\\n.fp-preset-container .fp-preset-item.fp-preset-highlight {\\r\\n  box-shadow: 0 0 0 2px #40a9ff;\\r\\n}\\r\\n.fp-preset-container .fp-preset-item > svg {\\r\\n  max-width: 6rem;\\r\\n  max-height: 3rem;\\r\\n  pointer-events: none;\\r\\n}\\r\\n.fp-preset-container .fp-preset-custom:hover .fp-remove-trigger {\\r\\n  opacity: 1;\\r\\n}\\r\\n.fp-preset-container .fp-preset-custom .fp-remove-trigger {\\r\\n  opacity: 0;\\r\\n  transition: opacity 0.2s linear;\\r\\n  will-change: opacity;\\r\\n  z-index: 1;\\r\\n  padding: 2px;\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  background-color: #1EAAFF;\\r\\n  color: #405471;\\r\\n  padding: 0;\\r\\n}\\r\\n.fp-preset-container .fp-preset-custom .remove-icon {\\r\\n  width: 12px;\\r\\n  height: 12px;\\r\\n  color: #fff;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-content {\\r\\n  scroll-behavior: smooth;\\r\\n  -webkit-overflow-scrolling: touch;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-content::-webkit-scrollbar {\\r\\n  width: 0;\\r\\n  height: 0;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-content::-webkit-scrollbar-thumb {\\r\\n  background-color: transparent;\\r\\n  border-radius: 0;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-content::-webkit-scrollbar-track {\\r\\n  background-color: transparent;\\r\\n}\\r\\n.fp-preset-slides .split-line {\\r\\n  width: 1px;\\r\\n  top: 1.25rem;\\r\\n  height: 3rem;\\r\\n  position: absolute;\\r\\n  right: 5.75rem;\\r\\n  background-color: #E0E5EB;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-trigger {\\r\\n  position: absolute;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-trigger.fp-slides-play {\\r\\n  top: 1.25rem;\\r\\n  width: 3rem;\\r\\n  height: 3rem;\\r\\n  right: 1.5rem;\\r\\n  border-radius: 3rem;\\r\\n  padding: 0.5rem;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-trigger.fp-slides-trigger-prev,\\r\\n.fp-preset-slides .fp-slides-trigger.fp-slides-trigger-next {\\r\\n  width: 1rem;\\r\\n  height: 1rem;\\r\\n  border: none;\\r\\n  background-color: transparent;\\r\\n  top: 2.25rem;\\r\\n  padding: 0;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-trigger.fp-slides-trigger-prev {\\r\\n  left: 0.75rem;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-trigger.fp-slides-trigger-next {\\r\\n  right: 6.75rem;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-trigger .slides-icon {\\r\\n  width: 1rem;\\r\\n  height: 1rem;\\r\\n  pointer-events: none;\\r\\n}\\r\\n.fp-preset-slides .fp-slides-trigger.disabled {\\r\\n  opacity: 0.35;\\r\\n  cursor: default;\\r\\n  pointer-events: none;\\r\\n}\\r\\n.fp-preset-slides .fp-preset-list {\\r\\n  display: inline-flex;\\r\\n  flex-wrap: nowrap;\\r\\n}\\r\\n.fp-btn-action {\\r\\n  cursor: pointer;\\r\\n  display: inline-flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  /* transition: opacity linear 0.25s, background-color linear 0.25s; */\\r\\n  will-change: background-color, opacity;\\r\\n  z-index: 1;\\r\\n  background-color: #fff;\\r\\n  color: #1EAAFF;\\r\\n  border: 1px solid #1EAAFF;\\r\\n  outline: none;\\r\\n  border-radius: 1rem;\\r\\n  font-size: 1rem;\\r\\n}\\r\\n.fp-btn-action .fp-icon {\\r\\n  transition: color linear 0.25s;\\r\\n  will-change: color;\\r\\n  color: #1EAAFF;\\r\\n}\\r\\n\\r\\n.fp-btn-action:hover {\\r\\n    opacity: .75;\\r\\n}\\r\\n\\r\\n.fp-btn-action:active {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.fp-modal-footer .fp-btn-action:hover {\\r\\n    background-color: #1EAAFF;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.fp-modal-footer .fp-btn-action:active {\\r\\n    background-color: #1B9CEA;\\r\\n    border:1px solid #1B9CEA;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.fp-btn-action.active:hover {\\r\\n    background-color: #4BBBFF;\\r\\n    border:1px solid #4BBBFF;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n.fp-btn-action.active:active {\\r\\n    background-color: #1B9CEA;\\r\\n    border:1px solid #1B9CEA;\\r\\n    color: #fff;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.fp-btn-action.active {\\r\\n  background-color: #1EAAFF;\\r\\n  color: #fff;\\r\\n}\\r\\n.fp-btn-action.active .fp-icon {\\r\\n  color: #fff;\\r\\n}\\r\\n.fp-btn-action.danger {\\r\\n  border-color: #FD7D70;\\r\\n}\\r\\n.fp-btn-action.danger .fp-icon {\\r\\n  color: #FD7D70;\\r\\n}\\r\\n.fp-modal-close {\\r\\n  width: 32px;\\r\\n  height: 32px;\\r\\n  border-top-right-radius: 0.25rem;\\r\\n}\\r\\n.fp-modal-close,\\r\\n.fp-remove-trigger {\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n  background-color: rgba(225, 225, 225, 0.5);\\r\\n  color: #ff3c3f;\\r\\n}\\r\\n.fp-modal-close:hover,\\r\\n.fp-remove-trigger:hover {\\r\\n  color: #ff090d;\\r\\n}\\r\\n\"","module.exports = \"<section>\\n    <!-- 遮罩 -->\\n    <section class=\\\"fp-modal-mask\\\" data-action=\\\"CANCEL\\\"></section>\\n    <section class=\\\"fp-modal\\\">\\n        <section class=\\\"fp-modal-content\\\">\\n            <section class=\\\"fp-color-list-container\\\">\\n                <section class=\\\"color-list fp-color-list\\\">\\n                    <!-- 颜色列表区域 -->\\n                    <!-- <%=colorItems%> -->\\n                </section>\\n            </section>\\n            <!-- 表情面板工作区 -->\\n            <section class=\\\"fp-editor\\\">\\n                <section class=\\\"fp-editor-container\\\">\\n                    <section class=\\\"fp-editor-content\\\">\\n                        <section class=\\\"fp-canvas-content\\\">\\n                            <section class=\\\"fp-svg-canvas\\\">\\n                                <!-- 表情面板SVG -->\\n                                <!-- <%=editorSvg%> -->\\n                            </section>\\n                            <section class=\\\"fp-axis\\\">\\n                                <!-- 坐标点 -->\\n                                <!-- <%=editorAxisPoints%> -->\\n                            </section>\\n                            <section class=\\\"fp-linear-actions\\\"></section>\\n                        </section>\\n                    </section>\\n                </section>\\n                <section class=\\\"fp-actions\\\">\\n                    <!-- 表情面板工具区 -->\\n                    <!-- <%=actionsItems%> -->\\n                </section>\\n            </section>\\n            <section class=\\\"fp-modal-footer\\\">\\n                <button class=\\\"fp-btn-action\\\" data-action=\\\"CANCEL\\\">cancel</button>\\n                <button class=\\\"fp-btn-action active\\\" data-action=\\\"OK\\\">confirm</button></section>\\n        </section>\\n    </section>\\n</section>\"","/* eslint-disable no-console */\n/* eslint-disable no-mixed-operators */\n\nimport Blockly from 'scratch-blocks';\nimport FacePanel from './field-face';\nimport {faceDataToSvg} from './field-face/util';\n\nconst config = {\n    actions: [],\n    bgimg: {name: 'matataconn.png', url: 'static/matataconn.png'},\n    boxspacing: 20,\n    colorIndex: 1,\n    colors: ['#ffffff', '#ff0000', '#ffA500', '#ffff00', '#00ff00', '#00ffff', '#0000ff', '#8000ff', '#000000'],\n    columns: 16,\n    count: 12,\n    create_time: 1584582917,\n    defaultFace: '',\n    defaultFaces: ['234567888881'],\n    defaultValue: '234567888881',\n    enableAnimation: false,\n    ftype: 2,\n    guid: '9d03c0b1',\n    id: '1',\n    interval: 30,\n    modify_time: 1584582917,\n    multiColor: true,\n    name: 'ledRing',\n    offsetCount: 1,\n    radius: 12,\n    rows: 8,\n    showNumber: false,\n    size: {width: 16, height: 16},\n    sort: 999,\n    startNumber: 1,\n    type: 'field_paneleditor',\n    uid: 1111\n};\n\nconst cacheFacePanel = {};\n\nclass FieldPanelEditor extends Blockly.Field {\n    constructor (options) {\n        super();\n        this.options = options;\n    }\n\n    willInit () {\n        this.setValue(this.getValue());\n    }\n\n    getValue () {\n        const {\n            defaultValue,\n            ftype = 0,\n            count = 10,\n            rows = 8,\n            colums = 16\n        } = this.options;\n        return (\n            this.data_ ||\n            defaultValue ||\n            new Array(ftype === 0 ? rows * colums : count).fill(0)\n                .join('')\n        );\n    }\n\n    setValue (data) {\n        try {\n            if (!data || this.data_ === data) {\n                return;\n            }\n            if (\n                Blockly.Events.isEnabled() &&\n                this.sourceBlock_ &&\n                this.data_ !== data\n            ) {\n                Blockly.Events.fire(\n                    new Blockly.Events.BlockChange(\n                        this.sourceBlock_,\n                        'field',\n                        this.name,\n                        this.data_,\n                        data\n                    )\n                );\n            }\n            this.data_ = data;\n            this.render_();\n        } catch (error) {\n            console.warn(error);\n        }\n    }\n\n    render_ () {\n        if (this.fieldGroup_ && this.options) {\n            const svgElement = faceDataToSvg(\n                this.options,\n                this.data_,\n                32,\n                true\n            );\n            if (svgElement instanceof SVGElement) {\n                const width = Number(svgElement.getAttribute('width'));\n                const height = Number(svgElement.getAttribute('height'));\n                const xml = svgElement.outerHTML;\n                this.size_.width = width;\n                this.size_.height = height;\n                if (this.fieldGroup_.innerHTML !== xml) {\n                    this.fieldGroup_.innerHTML = xml;\n                }\n                if (this.sourceBlock_ && this.sourceBlock_.rendered) {\n                    this.sourceBlock_.render();\n                }\n            }\n        }\n    }\n\n    showEditor_ () {\n        if (this.options) {\n            const data = this.getValue();\n            const {guid} = this.options;\n            let facepanel;\n            if (cacheFacePanel.hasOwnProperty(guid)) {\n                facepanel = cacheFacePanel[guid];\n                console.log({cache: facepanel});\n            } else {\n                facepanel = cacheFacePanel[guid] = new FacePanel(\n                    this.options,\n                    data\n                );\n                console.log({new: facepanel});\n            }\n            facepanel.open(data, this);\n        }\n    }\n}\n\nFieldPanelEditor.fromJson = function (options) {\n    options = config;\n    return new FieldPanelEditor(options);\n};\n\n\nBlockly.Field.register('field_face', FieldPanelEditor);\n\nBlockly.Blocks.face = {\n    /**\n     * Block for matrix value.\n     * @this Blockly.Block\n     */\n    init: function () {\n        this.jsonInit({\n            message0: '%1',\n            args0: [\n                {\n                    type: 'field_face',\n                    name: 'FACE'\n                }\n            ],\n            outputShape: Blockly.OUTPUT_SHAPE_ROUND,\n            output: 'Number',\n            extensions: ['colours_pen']\n        });\n    }\n};\n","export const SVGNS = 'http://www.w3.org/2000/svg';\n\nexport const EDITOR_SPACING = 24;\nexport const AXIS_SIZE = 20;\nexport const CELL_MAX_WIDTH = 32;\nexport const CELL_STROKE_WIDTH = 0.5;\nexport const CELL_STROKE_COLOR = '#E0E5EB';\nexport const CELL_FILL_COLOR = '#F9F9F9';\nexport const CELL_TAG_NAME = ['RECT', 'CIRCLE'];\n\nexport const LINEAR_OFFSET = 0;\nexport const LINEAR_MAX_ROWCOUNT = 8;\nexport const PREVIEW_SVG_HEIGHT = 48;\nexport const FACEPANEL_MAX = {\n    COL: 32,\n    ROW: 32\n};\n\n/**\n * LocalStorage 缓存的 KEY\n */\nexport const CACHE_FACEPANE_KEY = 'CACHE_FACE_DATA';\n\n/**\n * 白色映射表\n */\nexport const TRANSPARENT_MAP_COLORS = ['#FFFFFF', '#FFF', '#ffffff', '#fff'];\nexport const MAP_WHITE_COLOR_BORDER = '#BCDAFB';\n\n/**\n * 表情面板配置\n */\nexport const CONFIG = {\n    guid: 'default',\n    colors: ['#FFFFFF', '#00B9FF'],\n    colorIndex: 1,\n    columns: 16,\n    enableAnimation: false,\n    interval: 3,\n    multiColor: false,\n    radius: 8,\n    rows: 8,\n    showNumber: true,\n    size: {\n        width: CELL_MAX_WIDTH,\n        height: CELL_MAX_WIDTH\n    },\n    startNumber: 0,\n    ftype: 0\n};\n\nexport const colorItemTemplate = (color, bgColor, boxShadow, index, selected) => (\n    `<span class=\"color-list-item ${selected ? 'color-item-selected' : ''}\"\n        data-action=\"CHANGE_COLOR\"\n        data-action-value=\"${index}\">\n        <label class=\"color-item\"\n            style=\"color: ${color}; background-color: ${bgColor};\">\n            <svg class=\"fp-icon\"><use xlink:href=\"#iconcheck\"></use></svg>\n        </label>\n    </span>`\n);\n","import SvgEditor from './index';\nimport {\n    CONFIG,\n    TRANSPARENT_MAP_COLORS,\n    CELL_STROKE_COLOR,\n    CELL_TAG_NAME,\n    CELL_FILL_COLOR\n} from '../config';\nimport RingPanel from './ring';\nimport {createSvgElement} from '../util';\n\nexport default class FaceCanvas {\n    constructor (config) {\n        this.config = Object.assign({}, CONFIG, config);\n        this.canvasElement = null;\n        this.panel = null;\n        this._changeColorCallback = null;\n        this.isMouseDown = false;\n        this.createCanvas();\n    }\n\n    get axisPoints () {\n        return this._axisPoints;\n    }\n\n    set axisPoints (list) {\n        this._axisPoints = list;\n    }\n\n    get colorIndex () {\n        return this._colorIndex;\n    }\n\n    set colorIndex (index) {\n        this._colorIndex = index;\n    }\n\n    set faceData (data) {\n        const datas = data.split('').map(num => Number(num));\n        if (this.panel && datas.length) {\n        \n            const selector = 'circle';\n            const eles = this.canvasElement.querySelectorAll(selector);\n            eles.forEach(ele => {\n                const dataIndex = Number(ele.getAttribute('dataindex')) || 0;\n                const colorIndex = datas[dataIndex];\n                const {colors} = this.config;\n                const color = colors[colorIndex] || colors[0];\n                this.changeAxisPointColor(dataIndex, color);\n                const isWhite = TRANSPARENT_MAP_COLORS.indexOf(color) >= 0;\n                const fill = isWhite ? CELL_FILL_COLOR : color;\n                const stroke = isWhite ? CELL_STROKE_COLOR : color;\n                ele.setAttribute('fill', fill);\n                ele.setAttribute('stroke', stroke);\n            });\n            this.panel.faceData = datas;\n        }\n    }\n\n    get faceData () {\n        return this.panel.faceData.join('');\n    }\n\n    createCanvas () {\n        if (!(this.canvasElement instanceof SVGAElement)) {\n            this.panel = new RingPanel(this.config);\n            if (this.panel) {\n                this.panel.geneator();\n                let {boxWidth, boxHeight, cellElements} = this.panel;\n                boxWidth = boxWidth % 2 === 0 ? boxWidth : boxWidth + 1;\n                boxHeight = boxHeight % 2 === 0 ? boxHeight : boxHeight + 1;\n                const attrs = {\n                    class: 'fp-svg',\n                    style: 'background-color: transparent;',\n                    width: boxWidth,\n                    height: boxHeight,\n                    viewBox: `0 0 ${boxWidth} ${boxHeight}`\n                };\n                this.canvasElement = createSvgElement(\n                    attrs,\n                    'svg'\n                );\n                this.addEventListeners();\n                if (\n                    this.panel instanceof SvgEditor &&\n                    cellElements.length > 0\n                ) {\n                    this.canvasElement.innerHTML = cellElements.join('');\n                }\n            }\n        }\n    }\n\n    addEventListeners () {\n        const listeners = {\n            mousedown: this.handleMouseDown.bind(this),\n            mouseup: this.handleMouseUp.bind(this),\n            mousemove: this.handleMouseMove.bind(this),\n            mouseleave: this.handleMouseOut.bind(this),\n            touchstart: this.handleMouseDown.bind(this),\n            touchend: this.handleMouseUp.bind(this),\n            touchmove: this.handleMouseMove.bind(this)\n        };\n        for (const key in listeners) {\n            this.canvasElement.addEventListener(key, listeners[key]);\n        }\n    }\n\n    handleMouseDown (e) {\n        e.preventDefault();\n        const target = e.srcElement;\n        this.isMouseDown = true;\n        this.changeColor(target);\n    }\n\n    handleMouseUp (e) {\n        e.preventDefault();\n        this.isMouseDown = false;\n    }\n\n    handleMouseMove (e) {\n        e.preventDefault();\n        if (this.isMouseDown) {\n            let target;\n            if (e instanceof TouchEvent) {\n                if (!e.touches) {\n                    return;\n                }\n                target = document.elementFromPoint(\n                    e.touches[0].clientX,\n                    e.touches[0].clientY\n                );\n            } else {\n                target = e.srcElement;\n            }\n            this.changeColor(target, 'move');\n        }\n    }\n\n    handleMouseOut (e) {\n        e.preventDefault();\n        this.handleMouseUp(e);\n    }\n\n    set changeColorCallback (callback) {\n        this._changeColorCallback = callback;\n    }\n\n    get changeColorCallback () {\n        return this._changeColorCallback;\n    }\n\n    changeColor (target, type) {\n        if (target) {\n            const {tagName} = target;\n            if (CELL_TAG_NAME.indexOf(tagName.toUpperCase()) >= 0) {\n                const dataIndex = Number(target.getAttribute('dataindex')) || 0;\n                if (\n                    !type ||\n                    (type === 'move' && dataIndex !== this.mouseOverIndex)\n                ) {\n                    this.mouseOverIndex = dataIndex;\n                    const {colors} = this.config;\n                    const currentColor = target.getAttribute('fill') || '';\n                    const currentColorIndex = colors.indexOf(currentColor);\n                    const isHighLight = currentColorIndex !== 0;\n                    let colorIndex =\n                        isHighLight && currentColorIndex === this.colorIndex ?\n                            0 :\n                            this.colorIndex;\n                    if (this._mode === 'ERASE') {\n                        colorIndex = 0;\n                    }\n                    const color = colors[colorIndex];\n                    this.changeAxisPointColor(dataIndex, color);\n                    const isWhite = TRANSPARENT_MAP_COLORS.indexOf(color) >= 0;\n                    const fill = isWhite ? CELL_FILL_COLOR : color;\n                    const stroke = isWhite ? CELL_STROKE_COLOR : color;\n                    target.setAttribute('fill', fill);\n                    target.setAttribute('stroke', stroke);\n                    const faceData = this.panel.faceData;\n                    faceData[dataIndex] = colorIndex;\n                    this.panel.faceData = faceData;\n                    const callback = this.changeColorCallback;\n                    if (typeof callback === 'function') {\n                        callback();\n                    }\n                }\n            }\n        }\n    }\n\n    changeAxisPointColor (index, color) {\n        if (this.axisPoints instanceof NodeList) {\n            const ele = this.axisPoints.item(index);\n            const isWhite = TRANSPARENT_MAP_COLORS.indexOf(color) >= 0;\n            if (ele instanceof HTMLElement) {\n                const nextColor = isWhite ? '#405471' : '#FFF';\n                const currentColor = ele.style.color;\n                if (nextColor !== currentColor) {\n                    ele.style.color = nextColor;\n                }\n            }\n        }\n    }\n}\n","/* eslint-disable quote-props */\n/* eslint-disable max-len */\nimport {TRANSPARENT_MAP_COLORS, CELL_STROKE_WIDTH, CELL_STROKE_COLOR, CELL_MAX_WIDTH, CELL_FILL_COLOR} from '../config';\n\nexport default class SvgEditor {\n    constructor (config, faceData) {\n        this.config = config;\n        this._faceData = faceData;\n        this.cellElements = [];\n        this.axisElements = [];\n    }\n\n    get emptyFaceData () {\n        const {count = 12} = this.config;\n        const faceData = Array(count).fill(0);\n        return faceData;\n    }\n\n    get faceData () {\n        if (this._faceData) return this._faceData.split('').map(d => Number(d));\n        return this.emptyFaceData;\n    }\n\n    set faceData (faceData) {\n        this._faceData = faceData.join('');\n    }\n\n    addCellElement (attrs, colorIndex = 0, tag) {\n        const html = this.createSvgElementHtml({\n            ...this.cellDftAttr(colorIndex),\n            ...attrs\n        }, tag);\n        this.cellElements.push(html);\n    }\n\n    addAxisPoint (index, top, left, w, h, color) {\n        const {size: {width = CELL_MAX_WIDTH, height = CELL_MAX_WIDTH}, startNumber = 0} = this.config;\n        const attrs = {\n            width: `${w || width}px`,\n            height: `${h || height}px`,\n            top: `${top}px`,\n            left: `${left}px`,\n            'line-height': `${h || height}px`\n        };\n        if (color) {\n            attrs.color = color;\n        }\n        const html = this.createAxisNoElementHtml(`${index + startNumber}`, attrs);\n        this.axisElements.push(html);\n    }\n\n    createSvgElementHtml (attrs, tag = 'rect', innerText) {\n        const attrsString = [];\n        if (typeof attrs === 'object') {\n            for (const key in attrs) {\n                attrsString.push(`${key}=\"${attrs[key]}\"`);\n            }\n        }\n        return `<${tag} ${attrsString.join(' ')}>${innerText || ''}</${tag}>`;\n    }\n\n    cellDftAttr (colorIndex = 0) {\n        const {colors} = this.config;\n        const color = colors[colorIndex] || TRANSPARENT_MAP_COLORS[0];\n        const isWhite = TRANSPARENT_MAP_COLORS.indexOf(color) >= 0;\n        return {\n            'fill': isWhite ? CELL_FILL_COLOR : color,\n            'stroke-width': CELL_STROKE_WIDTH * 2,\n            'stroke': isWhite ? CELL_STROKE_COLOR : color\n        };\n    }\n\n    createAxisNoElementHtml (text, style) {\n        const styleString = [];\n        for (const key in style) {\n            styleString.push(`${key}: ${style[key]}`);\n        }\n        return `<span class=\"axis-point\" style=\"${styleString.join('; ')}\">${text}</span>`;\n    }\n}\n","import SvgEditor from './index';\nimport {EDITOR_SPACING, CELL_MAX_WIDTH} from '../config';\n\nexport default class RingPanel extends SvgEditor {\n    constructor (config, faceData) {\n        super(config, faceData);\n        const {\n            size: {width = CELL_MAX_WIDTH},\n            count = 12,\n            interval = 0\n        } = config;\n        this.angle = (2 * Math.PI) / count;\n        this.r = (width || CELL_MAX_WIDTH) / 2;\n        this.R = (this.r + interval) / Math.sin(this.angle / 2);\n        this.x0 = this.r + this.R;\n        this.y0 = this.x0;\n    }\n\n    geneator () {\n        const {\n            size: {width = CELL_MAX_WIDTH},\n            count = 12,\n            offsetCount = 1,\n            offset = CELL_MAX_WIDTH,\n            boxspacing = EDITOR_SPACING\n        } = this.config;\n        const {angle, r, R, x0, y0, faceData} = this;\n        for (let index = 0; index < count; index++) {\n            const sinV = Math.sin((index + offsetCount) * angle);\n            const cosV = Math.cos((index + offsetCount) * angle);\n            const x = x0 + (R * sinV) + 1;\n            const y = y0 - (R * cosV) + 1;\n            const colorIndex = faceData[index] || 0;\n            const attrs = {\n                r: r,\n                cx: x,\n                cy: y,\n                dataindex: index\n            };\n            this.addCellElement(attrs, colorIndex, 'circle');\n            const xs = x0 + ((R - (offset || CELL_MAX_WIDTH)) * sinV) + 1;\n            const ys = y0 - ((R - (offset || CELL_MAX_WIDTH)) * cosV) + 1;\n            const offsetX = -((width || CELL_MAX_WIDTH) / 2) + 1;\n            const offsetY = offsetX;\n            this.addAxisPoint(\n                index,\n                boxspacing + ys + offsetY,\n                boxspacing + xs + offsetX\n            );\n        }\n        this.boxWidth = (Math.round(R + r) * 2) + 2;\n        this.boxHeight = this.boxWidth;\n    }\n}\n","import {templateHTML, formatMessage} from './sources';\nimport {\n    TRANSPARENT_MAP_COLORS,\n    colorItemTemplate,\n    EDITOR_SPACING,\n    MAP_WHITE_COLOR_BORDER\n} from './config';\nimport FaceCanvas from './editor/canvas';\n\nexport default class Editor {\n    constructor (config) {\n        this._config = config;\n        this._container = null;\n        this._field = '';\n        this._canvas = new FaceCanvas(this._config);\n        this.render();\n    }\n\n    get actions () {\n        return {\n            CHANGE_COLOR: (index, ele) => {\n                if (ele instanceof HTMLElement) {\n                    index = Number(index);\n                    if (this._container) {\n                        if (!ele.classList.contains('color-item-selected')) {\n                            this.switchColorByIndex(index);\n                        }\n                        this.switchToEditMode();\n                    }\n                }\n            },\n            CANCEL: () => {\n                this.close();\n            },\n            OK: () => {\n                const field = this._field;\n                const facedata = this.canvas.faceData;\n                if (field && field.setValue) {\n                    const setValue = field.setValue;\n                    if (typeof setValue === 'function') {\n                        setValue.call(field, facedata.toString());\n                    }\n                }\n                this.close();\n            }\n        };\n    }\n\n    render () {\n        const {\n            guid = 'default',\n            showNumber = true,\n            colorIndex = 1,\n            boxspacing = EDITOR_SPACING,\n            multiColor = true,\n            bgimg\n        } = this._config;\n        const id = `facepanel_${guid.replace(/-/g, '')}`;\n        let container = document.querySelector(`#${id}`);\n        if (!(container instanceof Element)) {\n            container = document.createElement('section');\n            container.setAttribute('id', id);\n            container.setAttribute('class', 'facepanel facepanel-hide');\n            container.innerHTML = templateHTML;\n\n            this._axisContainer = container.querySelector(\n                '.fp-axis'\n            );\n            this._svgContainer = container.querySelector(\n                '.fp-svg-canvas'\n            );\n            this._colorsContainer = container.querySelector(\n                '.color-list'\n            );\n            this._okBtn = container.querySelector(\n                'button[data-action=\"OK\"]'\n            );\n            this._cancelBtn = container.querySelector(\n                'button[data-action=\"CANCEL\"]'\n            );\n\n            if (this._colorsContainer instanceof HTMLElement) {\n                if (multiColor === true) {\n                    this._colorsContainer.innerHTML = this.genColorsContent().join(\n                        ''\n                    );\n                } else {\n                    this._colorsContainer.remove();\n                }\n            }\n\n            if (this._svgContainer instanceof HTMLElement) {\n                this._svgContainer.appendChild(this.canvas.canvasElement);\n                if (bgimg) {\n                    const url = typeof bgimg === 'string' ? bgimg : bgimg.url;\n                    if (url) {\n                        this._svgContainer.style.backgroundImage = `url(${url})`;\n                    }\n                }\n                this._svgContainer.style.padding = `${boxspacing}px`;\n            }\n\n            if (this._axisContainer instanceof Element) {\n                this._axisContainer.innerHTML = this.canvas.panel.axisElements.join(\n                    ''\n                );\n                if (!showNumber) {\n                    this._axisContainer.classList.add('fp-axis-hide');\n                }\n            }\n\n            this.canvas.colorIndex = colorIndex;\n\n            this.addEventListener(container);\n\n            document.body.appendChild(container);\n        }\n        this._container = container;\n    }\n\n    addEventListener (container) {\n        if (container) {\n            container.addEventListener(\n                'click',\n                ev => {\n                    const actionsHandler = this.actions;\n                    let ele = ev.srcElement;\n                    if (actionsHandler) {\n                        while (ele instanceof Element) {\n                            const action =\n                                ele.getAttribute('data-action') || '';\n                            if (action !== '') {\n                                if (\n                                    actionsHandler[action] &&\n                                    typeof actionsHandler[action] === 'function'\n                                ) {\n                                    const actiondata = ele.getAttribute(\n                                        'data-action-value'\n                                    );\n                                    actionsHandler[action](\n                                        actiondata || '',\n                                        ele\n                                    );\n                                }\n                                break;\n                            }\n                            ele = ele.parentElement;\n                        }\n                    }\n                },\n                false\n            );\n        }\n    }\n\n    get canvas () {\n        return this._canvas;\n    }\n\n    preview (data) {\n        const facedata = this.canvas.faceData;\n        if (!data) {\n            data = this.canvas.panel.emptyFacedata.join('');\n        }\n        if (data && data !== facedata) {\n            this.canvas.faceData = data;\n        }\n    }\n\n    open (data, field) {\n        this._field = field;\n        this.preview(data);\n        this.updateButtonText();\n        setTimeout(() => {\n            if (this._container instanceof HTMLElement) {\n                this._container.style.visibility = 'visible';\n                this._container.classList.remove('facepanel-hide');\n                this._container.classList.add('facepanel-show');\n            }\n        }, 0);\n    }\n\n    close () {\n        if (this._field) {\n            this._field = null;\n        }\n        if (this._container instanceof HTMLElement) {\n            this._container.style.visibility = 'hidden';\n            this._container.classList.remove('facepanel-show');\n            this._container.classList.add('facepanel-hide');\n        }\n        this.switchColorByIndex(1);\n    }\n\n    genColorsContent () {\n        const {colors, colorIndex = 1} = this._config;\n        return colors.map((color, index) => {\n            const bgColor = color;\n            const isWhite =\n                TRANSPARENT_MAP_COLORS.indexOf(color.toUpperCase()) >= 0;\n            const boxShadow = '';\n            if (isWhite) {\n                color = MAP_WHITE_COLOR_BORDER;\n            } else {\n                color = '#fff';\n            }\n            return colorItemTemplate(\n                color,\n                bgColor,\n                boxShadow,\n                index,\n                index === colorIndex\n            );\n        });\n    }\n\n    switchToEditMode () {\n        if (this._container instanceof HTMLElement) {\n            const radio = this._container.querySelector(\n                '[data-action=\"DRAW\"] > input[type=\"radio\"]'\n            );\n            if (radio instanceof HTMLInputElement) {\n                this.canvas.mode = 'DRAW';\n                radio.click();\n            }\n        }\n    }\n\n    switchColorByIndex (index) {\n        if (this._container) {\n            const {multiColor} = this._config;\n            if (multiColor) {\n                this.canvas.colorIndex = index;\n                this._container\n                    .querySelectorAll('[data-action=CHANGE_COLOR]')\n                    .forEach(ele => {\n                        const idx = ele.getAttribute('data-action-value');\n                        if (Number(idx) === index) {\n                            ele.classList.add('color-item-selected');\n                        } else {\n                            ele.classList.remove('color-item-selected');\n                        }\n                    });\n            }\n        }\n    }\n\n    updateButtonText () {\n        if (this._okBtn instanceof HTMLElement) {\n            const text = formatMessage('gui.modal.ok');\n            if (this._okBtn.innerText !== text && text) {\n                this._okBtn.innerText = text;\n            }\n        }\n        if (this._cancelBtn instanceof HTMLElement) {\n            const text = formatMessage('gui.modal.cancel');\n            if (this._cancelBtn.innerText !== text && text) {\n                this._cancelBtn.innerText = text;\n            }\n        }\n    }\n}\n","!function(d){var t,e='<svg><symbol id=\"iconsave\" viewBox=\"0 0 1024 1024\"><path d=\"M211.692308 132.923077h444.967384c28.750769 0 56.32 11.421538 76.603077 31.704615l126.109539 126.109539a108.307692 108.307692 0 0 1 31.704615 76.603077v444.967384a78.769231 78.769231 0 0 1-78.769231 78.769231H211.692308a78.769231 78.769231 0 0 1-78.769231-78.769231V211.692308a78.769231 78.769231 0 0 1 78.769231-78.769231z m462.76923 276.716308V289.476923c0-26.624-21.582769-48.206769-48.206769-48.206769H289.476923c-26.624 0-48.206769 21.582769-48.206769 48.206769V409.6c0 26.624 21.582769 48.206769 48.206769 48.206769H626.215385c26.624 0 48.206769-21.582769 48.206769-48.206769z m-135.404307-141.312h27.096615c14.966154 0 27.096615 12.091077 27.096616 27.05723v108.307693c0 14.966154-12.130462 27.096615-27.096616 27.096615h-27.096615A27.057231 27.057231 0 0 1 512 403.692308V295.384615c0-14.966154 12.130462-27.096615 27.096615-27.096615z\"  ></path></symbol><symbol id=\"iconeraser\" viewBox=\"0 0 1024 1024\"><path d=\"M638.194887 56.130434l340.286182 340.286182a79.36 79.36 0 0 1 0 112.231988l-336.816644 336.816645-452.54834-452.54834L525.902559 56.130434a79.36 79.36 0 0 1 112.231989 0z m-491.135628 378.90364l452.54834 452.54834-45.435853 45.435853a39.68 39.68 0 0 1-27.846808 11.615408L337.73296 945.810301a39.68 39.68 0 0 1-28.299357-11.645578L34.797101 659.528221a79.36 79.36 0 0 1 0-112.231989l112.262158-112.262158z\"  ></path></symbol><symbol id=\"iconplay\" viewBox=\"0 0 1024 1024\"><path d=\"M298.666667 169.386667v685.226666a87.765333 87.765333 0 0 0 138.368 71.68l485.418666-342.613333a87.765333 87.765333 0 0 0 0-143.445333L437.034667 97.706667A87.765333 87.765333 0 0 0 298.666667 169.344z\"  ></path></symbol><symbol id=\"iconnext\" viewBox=\"0 0 1024 1024\"><path d=\"M795.84 561.792l-362.048 362.048a64 64 0 0 1-90.496-90.496l316.8-316.8-316.8-316.8a64 64 0 0 1 90.496-90.496l362.048 362.048a64 64 0 0 1 0 90.496z\"  ></path></symbol><symbol id=\"iconedit\" viewBox=\"0 0 1024 1024\"><path d=\"M533.06946233 220.96692933l251.850031 251.850031L381.16744533 876.56900833a78.877141 78.877141 0 0 1-52.372313 23.034894l-193.035756 8.310409a39.43857 39.43857 0 0 1-41.105852-41.719372l11.1828-189.828718a78.877141 78.877141 0 0 1 22.979119-51.145273L533.06946233 220.96692933z m188.07182-132.297259l195.210964 195.210964a39.43857 39.43857 0 0 1 0 55.774561l-83.661842 83.661842-250.985525-250.985525 83.661842-83.661842a39.43857 39.43857 0 0 1 55.774561 0z\"  ></path></symbol><symbol id=\"iconplus\" viewBox=\"0 0 1024 1024\"><path d=\"M448 448V192a64 64 0 1 1 128 0v256h256a64 64 0 0 1 0 128H576v256a64 64 0 0 1-128 0V576H192a64 64 0 1 1 0-128h256z\"  ></path></symbol><symbol id=\"icondelete\" viewBox=\"0 0 1024 1024\"><path d=\"M170.666667 362.666667h682.666666v554.666666a85.333333 85.333333 0 0 1-85.333333 85.333334H256a85.333333 85.333333 0 0 1-85.333333-85.333334v-554.666666z m170.666666 128a42.666667 42.666667 0 0 0-42.666666 42.666666v256a42.666667 42.666667 0 0 0 85.333333 0v-256a42.666667 42.666667 0 0 0-42.666667-42.666666z m170.666667 0a42.666667 42.666667 0 0 0-42.666667 42.666666v256a42.666667 42.666667 0 0 0 85.333334 0v-256a42.666667 42.666667 0 0 0-42.666667-42.666666z m170.666667 0a42.666667 42.666667 0 0 0-42.666667 42.666666v256a42.666667 42.666667 0 0 0 85.333333 0v-256a42.666667 42.666667 0 0 0-42.666666-42.666666zM384 170.666667V85.333333a42.666667 42.666667 0 0 1 42.666667-42.666666h170.666666a42.666667 42.666667 0 0 1 42.666667 42.666666v85.333334h234.666667a64 64 0 0 1 0 128h-725.333334a64 64 0 0 1 0-128H384z\"  ></path></symbol><symbol id=\"iconminus\" viewBox=\"0 0 1024 1024\"><path d=\"M192 448h640a64 64 0 0 1 0 128H192a64 64 0 1 1 0-128z\"  ></path></symbol><symbol id=\"iconcheck\" viewBox=\"0 0 1024 1024\"><path d=\"M399.502915 625.790753l362.038672-362.038672a64 64 0 1 1 90.509668 90.509668l-407.293506 407.293506a64 64 0 0 1-90.509668 0l-181.019336-181.019336a64 64 0 0 1 90.509668-90.509668l135.764502 135.764502z\"  ></path></symbol><symbol id=\"iconprev\" viewBox=\"0 0 1024 1024\"><path d=\"M228.16 561.792a64 64 0 0 1 0-90.496l362.048-362.048a64 64 0 0 1 90.496 90.496l-316.8 316.8 316.8 316.8a64 64 0 1 1-90.496 90.496L228.16 561.792z\"  ></path></symbol><symbol id=\"iconaxis\" viewBox=\"0 0 1024 1024\"><path d=\"M957.738667 286.72a29.653333 29.653333 0 0 1 0 41.941333L328.533333 958.293333a29.653333 29.653333 0 0 1-41.941333 0L76.8 748.416a29.696 29.696 0 0 1 0-41.984l83.882667-83.925333 62.933333 62.933333 41.941333-41.984-62.933333-62.933333 62.933333-62.976 83.925334 83.925333 41.941333-41.984-83.925333-83.925333 62.933333-62.933334 62.933333 62.933334 41.941334-41.984-62.933334-62.933334 62.933334-62.976 83.882666 83.968 41.941334-41.984-83.882667-83.925333 62.933333-62.976 62.933334 62.933333 41.941333-41.984-62.933333-62.933333 83.882666-83.925333a29.653333 29.653333 0 0 1 41.941334 0l209.749333 209.877333zM779.52 360.106667a44.501333 44.501333 0 1 0 62.933333-62.933334 44.501333 44.501333 0 0 0-62.933333 62.933334z m122.282667 357.034666l59.306666 207.786667a29.653333 29.653333 0 0 1-36.650666 36.693333l-207.658667-59.392a29.482667 29.482667 0 0 1-12.8-7.552l-114.005333-114.048 190.293333-190.378666 113.962667 114.048a29.525333 29.525333 0 0 1 7.552 12.8zM254.293333 444.842667L81.066667 271.402667a29.653333 29.653333 0 0 1 0-41.941334l148.309333-148.437333a29.610667 29.610667 0 0 1 41.941333 0l173.312 173.44-190.250666 190.378667z\"  ></path></symbol><symbol id=\"iconstop\" viewBox=\"0 0 1024 1024\"><path d=\"M213.333333 128m64 0l0 0q64 0 64 64l0 682.666667q0 64-64 64l0 0q-64 0-64-64l0-682.666667q0-64 64-64Z\"  ></path><path d=\"M682.666667 128m64 0l0 0q64 0 64 64l0 682.666667q0 64-64 64l0 0q-64 0-64-64l0-682.666667q0-64 64-64Z\"  ></path></symbol><symbol id=\"iconclose\" viewBox=\"0 0 1024 1024\"><path d=\"M513.4336 441.0368l108.6464-108.5952a51.2 51.2 0 1 1 72.3968 72.3968l-108.5952 108.5952 108.5952 108.6464a51.2 51.2 0 0 1-72.3968 72.3968l-108.6464-108.5952-108.544 108.5952a51.2 51.2 0 0 1-72.448-72.3968l108.5952-108.6464-108.5952-108.544a51.2 51.2 0 1 1 72.3968-72.448l108.5952 108.5952z\"  ></path></symbol></svg>',a=(t=document.getElementsByTagName(\"script\"))[t.length-1].getAttribute(\"data-injectcss\");if(a&&!d.__iconfont__svg__cssinject__){d.__iconfont__svg__cssinject__=!0;try{document.write(\"<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>\")}catch(t){console&&console.log(t)}}!function(t){if(document.addEventListener)if(~[\"complete\",\"loaded\",\"interactive\"].indexOf(document.readyState))setTimeout(t,0);else{var a=function(){document.removeEventListener(\"DOMContentLoaded\",a,!1),t()};document.addEventListener(\"DOMContentLoaded\",a,!1)}else document.attachEvent&&(e=t,o=d.document,l=!1,i=function(){l||(l=!0,e())},(n=function(){try{o.documentElement.doScroll(\"left\")}catch(t){return void setTimeout(n,50)}i()})(),o.onreadystatechange=function(){\"complete\"==o.readyState&&(o.onreadystatechange=null,i())});var e,o,l,i,n}(function(){var t,a;(t=document.createElement(\"div\")).innerHTML=e,e=null,(a=t.getElementsByTagName(\"svg\")[0])&&(a.setAttribute(\"aria-hidden\",\"true\"),a.style.position=\"absolute\",a.style.width=0,a.style.height=0,a.style.overflow=\"hidden\",function(t,a){a.firstChild?function(t,a){a.parentNode.insertBefore(t,a)}(t,a.firstChild):a.appendChild(t)}(a,document.body))})}(window);","/* eslint-disable import/no-commonjs */\nimport {localesInitialState} from '../../../../../reducers/locales';\nrequire('./iconfont.js');\n\nconst css = require('raw-loader!./facepanel.txt');\n\nconst fpStyle = document.querySelector('#mbFp');\nif (!(fpStyle instanceof Element)) {\n    const head = document.querySelector('head');\n    if (head) {\n        const style = document.createElement('style');\n        style.innerHTML = css;\n        style.setAttribute('id', 'mbFp');\n        style.setAttribute('type', 'text/css');\n        head.appendChild(style);\n    }\n}\n\nconst templateHTML = require('raw-loader!./template.html');\n\nconst formatMessageId = function (id) {\n    const result = localesInitialState.messages[id];\n    return result;\n};\n\nexport const formatMessage = formatMessageId;\nexport {templateHTML};\n","/* eslint-disable func-style */\n/* eslint-disable require-jsdoc */\n/* eslint-disable max-len */\nimport {SVGNS, PREVIEW_SVG_HEIGHT, CONFIG, CELL_MAX_WIDTH} from './config';\nimport RingPanel from './editor/ring';\nimport SvgEditor from './editor/index';\n\nexport const createSvgElement = (attrs, tag = 'circle') => {\n    const ele = document.createElementNS(SVGNS, tag);\n    if (typeof attrs === 'object') {\n        for (const key in attrs) {\n            ele.setAttribute(key, attrs[key]);\n        }\n    }\n    return ele;\n};\n\nexport function faceDataToSvg (config, data, showHeight = PREVIEW_SVG_HEIGHT, isPreview = false) {\n    config = Object.assign({}, CONFIG, config);\n    config.count = Math.min(config.count || 3, CELL_MAX_WIDTH);\n    const panel = new RingPanel(config, data);\n    if (panel instanceof SvgEditor) {\n        panel.geneator(data.length, panel.faceData, isPreview);\n    }\n    const {boxHeight = 100, boxWidth = 100} = panel;\n    const attrs = {\n        style: `display: block; cursor: pointer;`,\n        width: boxWidth * (showHeight / boxHeight),\n        height: showHeight,\n        viewBox: `0 0 ${boxWidth} ${boxHeight}`\n    };\n    const svg = createSvgElement(attrs, 'svg');\n    const rect = createSvgElement({\n        width: boxWidth || 100,\n        height: boxHeight || 100,\n        x: 0,\n        y: 0,\n        rx: 4,\n        ry: 4,\n        fill: 'rgba(255, 255, 255, .5)'\n    }, 'rect');\n    if (panel.cellElements instanceof Array && panel.cellElements.length > 0) {\n        svg.innerHTML = `${rect.outerHTML}${panel.cellElements.join('')}`;\n    }\n    return svg;\n}\n\nexport const svgElementToBase64 = svgElement => {\n    if (svgElement) {\n        return `data:image/svg+xml;base64,${window.btoa(new XMLSerializer().serializeToString(svgElement))}`;\n    }\n    return '';\n};\n\nexport function faceDataToImage (config, data, showHeight = PREVIEW_SVG_HEIGHT) {\n    const canvasElement = faceDataToSvg(config, data, showHeight);\n    const src = svgElementToBase64(canvasElement);\n    return src;\n}\n\nexport function faceDataToImages (config, faceData) {\n    const images = [];\n    if (faceData instanceof Array) {\n        faceData.forEach(face => {\n            if (face && typeof face.data === 'string') {\n                images.push(faceDataToImage(config, face.data));\n            }\n        });\n    }\n    return images;\n}\n\nexport const svgTextToBase64 = svgXmlString => {\n    const data = window.encodeURIComponent(svgXmlString);\n    return `data:image/svg+xml,${data}`;\n};\n\nexport const createAxisNoElement = (text, style) => {\n    const dftStyle = {\n        display: 'block',\n        position: 'absolute',\n        textAlign: 'center',\n        pointerEvents: 'none',\n        userSelect: 'none'\n    };\n    const span = document.createElement('span');\n    span.innerText = text;\n    Object.assign(style, dftStyle);\n    for (const key in style) {\n        if (span.style.hasOwnProperty(key)) {\n            span.style[key] = style[key];\n        }\n    }\n    return span;\n};\n\nexport const facepanelHtmlTemplate = (svgContainerPadding, canvasMargin, actionPadding) => `\n<section class=\"fp-modal-mask\" data-action=\"CANCEL\"></section>\n<section class=\"fp-modal\">\n    <a class=\"fp-modal-close fp-btn-action\" data-action=\"CANCEL\">\n        <svg class=\"fp-icon close-icon\">\n            <use xlink:href=\"#iconclose\"></use>\n        </svg>\n    </a>\n    <section class=\"fp-modal-content\">\n        <section class=\"color-list\"></section>\n        <section class=\"fp-editor\">\n            <section class=\"fp-editor-container\">\n                <section class=\"fp-editor-content\">\n                    <section class=\"fp-canvas-content\">\n                        <section class=\"fp-svg-canvas\" style=\"padding: ${svgContainerPadding};margin: ${canvasMargin}\"></section>\n                        <section class=\"fp-axis\"></section>\n                    </section>\n                </section>\n                <section class=\"fp-preset-container fp-preset-slides\"></section>\n            </section>\n            <section class=\"fp-actions\" style=\"padding: ${actionPadding}\"></section>\n        </section>\n        <section class=\"fp-modal-footer\">\n            <button class=\"btn-fp-ok fp-btn-action\" data-action=\"OK\">\n                <svg class=\"fp-icon ok-icon\">\n                    <use xlink:href=\"#iconcheck\"></use>\n                </svg>\n            </button>\n        </section>\n    </section>\n</section>`;\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js??ref--5-1!../../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Polyfills\nimport 'es6-object-assign/auto';\nimport 'core-js/fn/array/includes';\nimport 'core-js/fn/promise/finally';\nimport 'intl'; // For Safari 9\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport analytics from '../lib/analytics';\nimport AppStateHOC from '../lib/app-state-hoc.jsx';\nimport BrowserModalComponent from '../components/browser-modal/browser-modal.jsx';\nimport supportedBrowser from '../lib/supported-browser';\n\nimport styles from './index.css';\n\n// Register \"base\" page view\nanalytics.pageview('/');\n\nconst appTarget = document.createElement('div');\nappTarget.className = styles.app;\ndocument.body.appendChild(appTarget);\n\nif (supportedBrowser()) {\n    // require needed here to avoid importing unsupported browser-crashing code\n    // at the top level\n    require('./render-gui.jsx').default(appTarget);\n    require('../lib/scratch-extends/scratch-blocks/field-face-next');\n} else {\n    BrowserModalComponent.setAppElement(appTarget);\n    const WrappedBrowserModalComponent = AppStateHOC(BrowserModalComponent, true /* localesOnly */);\n    const handleBack = () => {};\n    // eslint-disable-next-line react/jsx-no-bind\n    ReactDOM.render(<WrappedBrowserModalComponent onBack={handleBack} />, appTarget);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {compose} from 'redux';\n\nimport AppStateHOC from '../lib/app-state-hoc.jsx';\nimport GUI from '../containers/gui.jsx';\nimport HashParserHOC from '../lib/hash-parser-hoc.jsx';\nimport log from '../lib/log.js';\nimport domain from '../config/domain.json';\n\nconst onClickLogo = () => {\n    window.location = domain.mata_home_link;\n};\n\nconst handleTelemetryModalCancel = () => {\n    log('User canceled telemetry modal');\n};\n\nconst handleTelemetryModalOptIn = () => {\n    log('User opted into telemetry');\n};\n\nconst handleTelemetryModalOptOut = () => {\n    log('User opted out of telemetry');\n};\n\n/*\n * Render the GUI playground. This is a separate function because importing anything\n * that instantiates the VM causes unsupported browsers to crash\n * {object} appTarget - the DOM element to render to\n */\nexport default appTarget => {\n    GUI.setAppElement(appTarget);\n\n    // note that redux's 'compose' function is just being used as a general utility to make\n    // the hierarchy of HOC constructor calls clearer here; it has nothing to do with redux's\n    // ability to compose reducers.\n    const WrappedGui = compose(\n        AppStateHOC,\n        HashParserHOC\n    )(GUI);\n\n    // TODO a hack for testing the backpack, allow backpack host to be set by url param\n    const backpackHostMatches = window.location.href.match(/[?&]backpack_host=([^&]*)&?/);\n    const backpackHost = backpackHostMatches ? backpackHostMatches[1] : null;\n\n    const scratchDesktopMatches = window.location.href.match(/[?&]isScratchDesktop=([^&]+)/);\n    let simulateScratchDesktop;\n    if (scratchDesktopMatches) {\n        try {\n            // parse 'true' into `true`, 'false' into `false`, etc.\n            simulateScratchDesktop = JSON.parse(scratchDesktopMatches[1]);\n        } catch {\n            // it's not JSON so just use the string\n            // note that a typo like \"falsy\" will be treated as true\n            simulateScratchDesktop = scratchDesktopMatches[1];\n        }\n    }\n\n    if (process.env.NODE_ENV === 'production' && typeof window === 'object') {\n        // Warn before navigating away\n        window.onbeforeunload = () => true;\n    }\n\n    ReactDOM.render(\n        // important: this is checking whether `simulateScratchDesktop` is truthy, not just defined!\n        simulateScratchDesktop ?\n            <WrappedGui\n                canEditTitle\n                isScratchDesktop\n                showTelemetryModal\n                canSave={false}\n                onTelemetryModalCancel={handleTelemetryModalCancel}\n                onTelemetryModalOptIn={handleTelemetryModalOptIn}\n                onTelemetryModalOptOut={handleTelemetryModalOptOut}\n            /> :\n            <WrappedGui\n                canEditTitle\n                backpackVisible\n                showComingSoon\n                backpackHost={backpackHost}\n                canSave={false}\n                onClickLogo={onClickLogo}\n            />,\n        appTarget);\n};\n","/* (ignored) */"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACVA;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AA5BA;AA+BA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAMA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;AA9FA;AACA;AAgGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AACA;AAVA;AAYA;AAlBA;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;AAGA;AAEA;;;;AAGA;AACA;AAEA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAhBA;AAmBA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA2CA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAIA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAUA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAIA;AADA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAvLA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAmFA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtJA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAgBA;AAAA;AAAA;AACA;AAIA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAlEA;AAAA;AAAA;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAXA;AAYA;AACA;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AACA;;;;AAjDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAGA;AAGA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AAIA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;;;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAlPA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAzBA;AA2BA;;;AA6GA;AACA;AACA;;;;;;;;;;;;;;;;;AC7JA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAKA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;;;;;;;;;;;ACrFA;;;;A","sourceRoot":""}